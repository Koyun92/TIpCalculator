@import url("https://fonts.googleapis.com/css2?family=Space+Mono:wght@400;700&display=swap");
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: #c5e4e7;
  font-family: "Space Mono", monospace;
  color: #5e7a7d;
  font-weight: 700;
  font-size: 16px;
}
body input {
  width: 100%;
  padding: 5px;
  background-color: #f4fafa;
  border: none;
  background-repeat: no-repeat;
  background-position-y: center;
  background-position-x: left;
  text-align: right;
  font-weight: 700;
  font-size: 14;
  font-family: "Space Mono", monospace;
  letter-spacing: 2px;
}
body .bill input {
  background-image: url(../img/icon-dollar.svg);
}
body .peopleNumber input {
  background-image: url(../img/icon-person.svg);
}

.logo {
  margin: 5vh auto;
  display: block;
}

.wrapper {
  background-color: #fff;
  border-radius: 15px;
  padding: 30px 15px;
}
.wrapper .select {
  margin: auto;
  max-width: 240px;
}
.wrapper .select .activeInput {
  box-shadow: 0 0 0 1px red;
}
.wrapper .select .tipSelect {
  margin-top: 10px;
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 1fr 10px 1fr;
  grid-template-columns: repeat(2, 1fr);
  grid-gap: 10px;
  align-content: space-between;
}
.wrapper .select .tipSelect p {
  -ms-grid-column: 1;
  -ms-grid-column-span: 2;
  grid-column: 1/3;
}
.wrapper .select .tipSelect .selectBtn {
  background-color: #00494d;
  color: #c5e4e7;
  width: 100px;
  padding: 5px 0;
  border-radius: 5px;
  text-align: center;
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}
.wrapper .select .tipSelect .selectBtn:hover {
  background-color: #72eedd;
  color: #00494d;
}
.wrapper .select .tipSelect .selectBtn:nth-child(odd) {
  -ms-grid-column-align: end;
  justify-self: end;
}
.wrapper .select .tipSelect .focused {
  background-color: #26c0ab;
  color: #00494d;
}
.wrapper .select .tipSelect input:nth-child(7) {
  font-size: 14px;
  font-weight: 700;
  text-align: right;
  border-radius: 5px;
  padding: 5px;
  width: 100px;
  -ms-grid-column-align: end;
  justify-self: end;
  background-color: #fff !important;
}
.wrapper .select .peopleNumber {
  margin-top: 10px;
}
.wrapper .select .peopleNumber span {
  display: none;
  color: red;
  font-size: 10px;
}
.wrapper .select .peopleNumber .activeSpan {
  display: block;
}
.wrapper .result {
  background-color: #00494d;
  color: #c5e4e7;
  display: -ms-grid;
  display: grid;
  max-width: 240px;
  margin: 20px auto;
  font-size: 12px;
  padding: 15px 10px;
  -ms-grid-columns: 1fr 0 1fr;
  grid-template-columns: repeat(2, 1fr);
  grid-gap: 15px 0;
  border-radius: 10px;
}
.wrapper .result div {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: (1fr)[2];
  grid-template-columns: repeat(2, 1fr);
  -ms-grid-row-align: end;
  align-self: end;
  padding-top: 20px;
}
.wrapper .result div ~ div {
  -ms-grid-row-align: start;
  align-self: start;
}
.wrapper .result div p {
  -ms-grid-column: 1;
  -ms-grid-column-span: 1;
  grid-column: 1/2;
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.wrapper .result div .total,
.wrapper .result div .tipAmount {
  -ms-grid-column: 2;
  -ms-grid-column-span: 1;
  grid-column: 2/3;
  text-align: right;
  font-size: 20px;
  color: #26c0ab;
}
.wrapper .result div span {
  -ms-grid-row: 3;
  -ms-grid-row-span: -1;
  grid-row: 3/2;
  color: #7f9c9f;
}
.wrapper .result div:nth-child(1) {
  -ms-grid-column: 1;
  -ms-grid-column-span: 2;
  grid-column: 1/3;
}
.wrapper .result div:nth-child(2) {
  -ms-grid-column: 1;
  -ms-grid-column-span: 2;
  grid-column: 1/3;
}
.wrapper .result button {
  -ms-grid-column: 1;
  -ms-grid-column-span: 2;
  grid-column: 1/3;
  background-color: #26c0ab;
  padding: 10px;
  font-size: 14px;
  font-weight: 700;
  text-transform: uppercase;
  color: #00494d;
  border: none;
  cursor: pointer;
}
.wrapper .result button:hover {
  background-color: #72eedd;
  color: #00494d;
}
.wrapper .result span {
  font-size: 10px;
}

@media (min-width: 1000px) {
  main {
    display: flex;
    flex-direction: column;
    height: 100vh;
    min-height: 500px;
    justify-content: center;
    flex-wrap: nowrap;
  }

  .wrapper {
    display: flex;
    justify-content: center;
    margin: 0 auto;
    flex-wrap: nowrap;
    height: 500px;
    width: 1000px;
  }
  .wrapper .select {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }
  .wrapper .select .bill input,
.wrapper .select .peopleNumber input {
    margin: 5px 0;
    padding: 5px;
    font-size: 22px;
  }
  .wrapper .select .bill input p,
.wrapper .select .peopleNumber p {
    text-align: right;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
  }
  .wrapper .select .bill input p .activeSpan,
.wrapper .select .peopleNumber p .activeSpan {
    display: inline-block;
  }
  .wrapper .select,
.wrapper .result {
    margin: 0;
    margin-right: 30px;
    margin-left: 30px;
    font-size: 16px;
    width: 400px;
    max-width: 400px;
    padding: 2%;
  }
  .wrapper .select div .total,
.wrapper .select div .tipAmount,
.wrapper .result div .total,
.wrapper .result div .tipAmount {
    font-size: 40px;
  }
  .wrapper .select .tipSelect,
.wrapper .result .tipSelect {
    -ms-grid-columns: 1fr 10px 1fr 10px 1fr;
    grid-template-columns: repeat(3, 1fr);
  }
  .wrapper .select .tipSelect p,
.wrapper .result .tipSelect p {
    -ms-grid-column: 1;
    -ms-grid-column-span: 3;
    grid-column: 1/4;
  }
  .wrapper .select .tipSelect .selectBtn:nth-child(odd),
.wrapper .result .tipSelect .selectBtn:nth-child(odd) {
    -ms-grid-column-align: start;
    justify-self: start;
  }
  .wrapper .select .tipSelect input:nth-child(7),
.wrapper .result .tipSelect input:nth-child(7) {
    -ms-grid-column-align: start;
    justify-self: start;
  }
  .wrapper .select .tipSelect .selectBtn,
.wrapper .result .tipSelect .selectBtn {
    padding: 10px 20px;
  }
  .wrapper .select button,
.wrapper .result button {
    -ms-grid-row-align: end;
    align-self: end;
    -ms-grid-column-align: center;
    justify-self: center;
    width: 70%;
  }
  .wrapper .select span,
.wrapper .result span {
    font-size: 13px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
