"use strict";
var tipCalculator = {
    billValue: document.querySelector(".bill input"),
    tipSelection: document.querySelectorAll(".tipSelect input"),
    customTipValue: document.querySelector(".tipSelect input:nth-child(7)"),
    numberOfPeople: document.querySelector(".peopleNumber input"),
    spanInfo: document.querySelector(".peopleNumber p span"),
    tipAmountResult: document.querySelector(".tipAmount"),
    TotalAmountResult: document.querySelector(".total"),
    tipValue: 0,
    resetButton: document.querySelector(".result button"),
    calculation: function () {
        this.tipAmountResult.innerHTML = "$" + (parseInt(this.billValue.value) * parseInt(this.tipValue) * .01 / parseInt(this.numberOfPeople.value)).toFixed(2), this.TotalAmountResult.innerHTML = "$" + ((parseInt(this.billValue.value) + parseInt(this.billValue.value) * parseInt(this.tipValue) * .01) / parseInt(this.numberOfPeople.value)).toFixed(2)
    },
    classClearing: function () {
        for (var t = 0; t < tipCalculator.tipSelection.length; t++) tipCalculator.tipSelection[t].classList.remove("focused")
    },
    valueChange: function () {
        0 != tipCalculator.billValue.value && 0 != tipCalculator.tipValue && 0 != tipCalculator.numberOfPeople.value ? this.calculation() : (this.TotalAmountResult.innerHTML = "$0", this.tipAmountResult.innerHTML = "$0")
    },
    fieldsClearing: function () {
        this.TotalAmountResult.innerHTML = "$0", this.tipAmountResult.innerHTML = "$0", this.classClearing(), this.tipValue = 0, this.billValue.value = "0", this.numberOfPeople.value = "0   ", this.customTipValue.value = "", this.spanInfo.classList.remove("activeSpan"), this.numberOfPeople.classList.remove("activeInput")
    }
};
tipCalculator.tipSelection.forEach(function (t) {
    t.addEventListener("click", function (t) {
        tipCalculator.classClearing(), console.log(t.target), tipCalculator.tipValue = t.target.value, t.target.classList.add("focused"), tipCalculator.valueChange()
    })
}), tipCalculator.customTipValue.addEventListener("input", function (t) {
    tipCalculator.tipValue = t.target.value, tipCalculator.valueChange()
}), tipCalculator.billValue.addEventListener("input", function (t) {
    tipCalculator.valueChange()
}), tipCalculator.numberOfPeople.addEventListener("input", function (t) {
    tipCalculator.valueChange(), 0 == tipCalculator.numberOfPeople.value ? (tipCalculator.spanInfo.classList.add("activeSpan"), tipCalculator.numberOfPeople.classList.add("activeInput")) : (tipCalculator.spanInfo.classList.remove("activeSpan"), tipCalculator.numberOfPeople.classList.remove("activeInput"))
}), tipCalculator.resetButton.addEventListener("click", function () {
    tipCalculator.fieldsClearing()
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyJ0aXBDYWxjdWxhdG9yIiwiYmlsbFZhbHVlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwidGlwU2VsZWN0aW9uIiwicXVlcnlTZWxlY3RvckFsbCIsImN1c3RvbVRpcFZhbHVlIiwibnVtYmVyT2ZQZW9wbGUiLCJzcGFuSW5mbyIsInRpcEFtb3VudFJlc3VsdCIsIlRvdGFsQW1vdW50UmVzdWx0IiwidGlwVmFsdWUiLCJyZXNldEJ1dHRvbiIsImNhbGN1bGF0aW9uIiwidGhpcyIsImlubmVySFRNTCIsInBhcnNlSW50IiwidmFsdWUiLCJ0b0ZpeGVkIiwiY2xhc3NDbGVhcmluZyIsImkiLCJsZW5ndGgiLCJ2YWx1ZUNoYW5nZSIsImNsYXNzTGlzdCIsInJlbW92ZSIsImZpZWxkc0NsZWFyaW5nIiwiZm9yRWFjaCIsImFkZEV2ZW50TGlzdGVuZXIiLCJ0aXAiLCJlIiwiY29uc29sZSIsImxvZyIsInRhcmdldCIsImFkZCJdLCJtYXBwaW5ncyI6ImFBRUEsSUFBTUEsY0FBZSxDQUNqQkMsVUFBV0MsU0FBU0MsY0FBYyxlQUNsQ0MsYUFBY0YsU0FBU0csaUJBQWlCLG9CQUN4Q0MsZUFBZ0JKLFNBQVNDLGNBQWMsaUNBQ3ZDSSxlQUFnQkwsU0FBU0MsY0FBYyx1QkFDdkNLLFNBQVVOLFNBQVNDLGNBQWMsd0JBQ2pDTSxnQkFBa0JQLFNBQVNDLGNBQWMsY0FDekNPLGtCQUFvQlIsU0FBU0MsY0FBYyxVQUMzQ1EsU0FSaUIsRUFTakJDLFlBQWFWLFNBQVNDLGNBQWMsa0JBSWxDVSxZQWJlLFdBQUFDLEtBQUFMLGdCQUFBTSxVQUFBLEtBQUFDLFNBQUFGLEtBQUFiLFVBQUFnQixPQUFBRCxTQUFBRixLQUFBSCxVQUFBLElBQUFLLFNBQUFGLEtBQUFQLGVBQUFVLFFBQUFDLFFBQUEsR0FpQmpCQyxLQUFBQSxrQkFqQmlCSixVQUFBLE1BaUJGQyxTQUFBRixLQUFBYixVQUFBZ0IsT0FBQUQsU0FBQUYsS0FBQWIsVUFBQWdCLE9BQUFELFNBQUFGLEtBQUFILFVBQUEsS0FBQUssU0FBQUYsS0FBQVAsZUFBQVUsUUFBQUMsUUFBQSxJQUdWQyxjQXBCWSxXQUFBLElBQUEsSUFBQUMsRUFBQSxFQUFBQSxFQUFBcEIsY0FBQUksYUFBQWlCLE9BQUFELElBc0JqQkUsY0F0QmlCbEIsYUFzQkpnQixHQUFBRyxVQUFBQyxPQUFBLFlBSVJGLFlBMUJZLFdBMkIwQixHQUE5QlosY0FBQUEsVUFBa0JLLE9BQXZCLEdBQUFmLGNBQUFXLFVBQUEsR0FBQVgsY0FBQU8sZUFBQVUsTUFJSkgsS0FBQUQsZUEvQmFDLEtBQUFKLGtCQUFBSyxVQUFBLEtBaUNqQlUsS0FqQ2lCaEIsZ0JBQUFNLFVBaUNELE9BS1pVLGVBdENhLFdBdUNiWCxLQUFLUCxrQkFBTFEsVUFBQSxLQUNBRCxLQUFLUixnQkFBTFMsVUFBQSxLQUNBRCxLQUFLTixnQkFDTE0sS0FBS1AsU0FBZWdCLEVBSXZCVCxLQUFBYixVQUFBZ0IsTUFBQSxJQUdMSCxLQUFBUCxlQUFBVSxNQUFBLE9BVFFILEtBQUtSLGVBQWVXLE1BQU8sR0FVbkNqQixLQUFhUSxTQUFDSixVQUFhc0IsT0FBUSxjQUczQkMsS0FBQUEsZUFBaUJKLFVBQVFDLE9BQUssaUJBYXRDeEIsY0FBY00sYUFBQUEsUUFBZXFCLFNBQUFBLEdBQTdCQyxFQUFBRCxpQkFBQSxRQUFBLFNBQUFFLEdBS0E3QixjQUFjQyxnQkFBZDZCLFFBQUFDLElBQUFGLEVBQUFHLFFBSUFoQyxjQUFjTyxTQUFlb0IsRUFBQUEsT0FBQUEsTUFFekIzQixFQUFBQSxPQUFhdUIsVUFBQ0QsSUFBZCxXQWxCRXRCLGNBQWNzQixrQkF5QmZ0QixjQUFBTSxlQUFBcUIsaUJBQUEsUUFBQSxTQUFBRSxHQUlMN0IsY0FBQVcsU0FBQWtCLEVBQUFHLE9BQUFmLE1BcEJJakIsY0FBY3NCLGdCQXVCakJ0QixjQUZEQyxVQUFBMEIsaUJBQUEsUUFBQSxTQUFBRSxHQWhCSTdCLGNBQWNzQixnQkFFbEJ0QixjQUFjTyxlQUFlb0IsaUJBQWlCLFFBQVEsU0FBQ0UsR0FFbkQ3QixjQUFjc0IsY0FDMkIsR0FBdEN0QixjQUFjTyxlQUFlVSxPQUM1QmpCLGNBQWNRLFNBQVNlLFVBQVVVLElBQUksY0FDckNqQyxjQUFjTyxlQUFlZ0IsVUFBVVUsSUFBSSxpQkFFM0NqQyxjQUFjUSxTQUFTZSxVQUFVQyxPQUFPLGNBQ3hDeEIsY0FBY08sZUFBZWdCLFVBQVVDLE9BQU8sa0JBTXREeEIsY0FBY1ksWUFBWWUsaUJBQWlCLFFBQVMsV0FDaEQzQixjQUFjeUIiLCJmaWxlIjoic2NyaXB0Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuY29uc3QgdGlwQ2FsY3VsYXRvcj0ge1xyXG4gICAgYmlsbFZhbHVlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYmlsbCBpbnB1dCcpLFxyXG4gICAgdGlwU2VsZWN0aW9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudGlwU2VsZWN0IGlucHV0JyksXHJcbiAgICBjdXN0b21UaXBWYWx1ZTogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRpcFNlbGVjdCBpbnB1dDpudGgtY2hpbGQoNyknKSxcclxuICAgIG51bWJlck9mUGVvcGxlOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGVvcGxlTnVtYmVyIGlucHV0JyksXHJcbiAgICBzcGFuSW5mbzogZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBlb3BsZU51bWJlciBwIHNwYW4nKSxcclxuICAgIHRpcEFtb3VudFJlc3VsdDogIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50aXBBbW91bnQnKSxcclxuICAgIFRvdGFsQW1vdW50UmVzdWx0OiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRvdGFsJyksXHJcbiAgICB0aXBWYWx1ZTogMCxcclxuICAgIHJlc2V0QnV0dG9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucmVzdWx0IGJ1dHRvbicpLFxyXG4gICAgXHJcbiAgICBjYWxjdWxhdGlvbigpe1xyXG4gICAgIFxyXG4gICAgICB0aGlzLnRpcEFtb3VudFJlc3VsdC5pbm5lckhUTUwgPSBcIiRcIiArICgocGFyc2VJbnQodGhpcy5iaWxsVmFsdWUudmFsdWUpICogKHBhcnNlSW50KHRoaXMudGlwVmFsdWUpKSowLjAxKS9wYXJzZUludCh0aGlzLm51bWJlck9mUGVvcGxlLnZhbHVlKSkudG9GaXhlZCgyKSA7XHJcbiAgICAgIHRoaXMuVG90YWxBbW91bnRSZXN1bHQuaW5uZXJIVE1MID0gXCIkXCIgKyAoKHBhcnNlSW50KHRoaXMuYmlsbFZhbHVlLnZhbHVlKSArICgocGFyc2VJbnQodGhpcy5iaWxsVmFsdWUudmFsdWUpICogKHBhcnNlSW50KHRoaXMudGlwVmFsdWUpKSowLjAxKSkpL3BhcnNlSW50KHRoaXMubnVtYmVyT2ZQZW9wbGUudmFsdWUpKS50b0ZpeGVkKDIpO1xyXG4gICAgICBcclxuICAgIH0sXHJcbiAgICBjbGFzc0NsZWFyaW5nKCl7XHJcbiAgICAgICAgZm9yKGxldCBpPTA7ICBpIDwgdGlwQ2FsY3VsYXRvci50aXBTZWxlY3Rpb24ubGVuZ3RoOyBpKyspe1xyXG4gICAgICAgICAgICB0aXBDYWxjdWxhdG9yLnRpcFNlbGVjdGlvbltpXS5jbGFzc0xpc3QucmVtb3ZlKFwiZm9jdXNlZFwiKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgdmFsdWVDaGFuZ2UoKXtcclxuICAgICAgICBpZih0aXBDYWxjdWxhdG9yLmJpbGxWYWx1ZS52YWx1ZSAhPSAwICYmIHRpcENhbGN1bGF0b3IudGlwVmFsdWUgIT0gMCAmJiB0aXBDYWxjdWxhdG9yLm51bWJlck9mUGVvcGxlLnZhbHVlICE9IDApe1xyXG4gICAgICAgICAgIFxyXG4gICAgICAgICAgICB0aGlzLmNhbGN1bGF0aW9uKCk7XHJcbiAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgIHRoaXMuVG90YWxBbW91bnRSZXN1bHQuaW5uZXJIVE1MID0gXCIkXCIgKzA7XHJcbiAgICAgICAgICAgIHRoaXMudGlwQW1vdW50UmVzdWx0LmlubmVySFRNTCA9IFwiJFwiICsgMDtcclxuICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICAgICAgLy9vc3R5bG93YcSHIGlub3V0eSB3ZyBkZXNpZ251IG9nYXJuxIXEhyBwYXJhZ3JhcGh5LSBrb211bmlrYXR5LCDFvGUgbmllIG1vxbxlIGJ5xIcgemVybyBcclxuICAgIH0sXHJcbiAgICBmaWVsZHNDbGVhcmluZygpe1xyXG4gICAgICAgIHRoaXMuVG90YWxBbW91bnRSZXN1bHQuaW5uZXJIVE1MID0gXCIkXCIgKzA7XHJcbiAgICAgICAgdGhpcy50aXBBbW91bnRSZXN1bHQuaW5uZXJIVE1MID0gXCIkXCIgKyAwO1xyXG4gICAgICAgIHRoaXMuY2xhc3NDbGVhcmluZygpO1xyXG4gICAgICAgIHRoaXMudGlwVmFsdWUgPSAwO1xyXG4gICAgICAgIHRoaXMuYmlsbFZhbHVlLnZhbHVlID0gXCIwXCI7XHJcbiAgICAgICAgdGhpcy5udW1iZXJPZlBlb3BsZS52YWx1ZT0gXCIwICAgXCI7XHJcbiAgICAgICAgdGhpcy5jdXN0b21UaXBWYWx1ZS52YWx1ZT0gXCJcIjtcclxuICAgICAgICB0aGlzLnNwYW5JbmZvLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZVNwYW4nKTtcclxuICAgICAgICB0aGlzLm51bWJlck9mUGVvcGxlLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZUlucHV0JylcclxuXHJcbiAgICAgICAgXHJcblxyXG4gICAgfVxyXG59XHJcblxyXG4vLyBDaG9vc2luZyB0aXAgYW1vdW50IGFuZCBjbGFzcyB0b2dnbGluZyBldmVudHNcclxudGlwQ2FsY3VsYXRvci50aXBTZWxlY3Rpb24uZm9yRWFjaCh0aXA9PntcclxuXHJcblxyXG4gICAgdGlwLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoZSk9PntcclxuICAgICAgICB0aXBDYWxjdWxhdG9yLmNsYXNzQ2xlYXJpbmcoKTtcclxuICAgICAgICBcclxuICAgICAgY29uc29sZS5sb2coZS50YXJnZXQpO1xyXG4gICAgICB0aXBDYWxjdWxhdG9yLnRpcFZhbHVlID0gZS50YXJnZXQudmFsdWU7XHJcbiAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2ZvY3VzZWQnKTtcclxuICAgICAgdGlwQ2FsY3VsYXRvci52YWx1ZUNoYW5nZSgpXHJcbiAgIFxyXG4gXHJcbiAgICAgICAgXHJcblxyXG4gICAgfSlcclxufSlcclxudGlwQ2FsY3VsYXRvci5jdXN0b21UaXBWYWx1ZS5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsKGUpPT57XHJcbiAgICB0aXBDYWxjdWxhdG9yLnRpcFZhbHVlID0gZS50YXJnZXQudmFsdWU7XHJcbiAgICB0aXBDYWxjdWxhdG9yLnZhbHVlQ2hhbmdlKCkgXHJcbn0pXHJcblxyXG50aXBDYWxjdWxhdG9yLmJpbGxWYWx1ZS5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsKGUpPT57XHJcbiAgICBcclxuICAgIHRpcENhbGN1bGF0b3IudmFsdWVDaGFuZ2UoKSBcclxufSlcclxudGlwQ2FsY3VsYXRvci5udW1iZXJPZlBlb3BsZS5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsKGUpPT57XHJcbiAgICBcclxuICAgIHRpcENhbGN1bGF0b3IudmFsdWVDaGFuZ2UoKVxyXG4gICAgaWYodGlwQ2FsY3VsYXRvci5udW1iZXJPZlBlb3BsZS52YWx1ZSA9PSAwKXtcclxuICAgICAgICB0aXBDYWxjdWxhdG9yLnNwYW5JbmZvLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZVNwYW4nKTtcclxuICAgICAgICB0aXBDYWxjdWxhdG9yLm51bWJlck9mUGVvcGxlLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZUlucHV0JylcclxuICAgIH1lbHNle1xyXG4gICAgICAgIHRpcENhbGN1bGF0b3Iuc3BhbkluZm8uY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlU3BhbicpO1xyXG4gICAgICAgIHRpcENhbGN1bGF0b3IubnVtYmVyT2ZQZW9wbGUuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlSW5wdXQnKVxyXG4gICAgfSBcclxufSlcclxuXHJcblxyXG4vLyBSZXNldCB0aXBDYWxjdWxhdG9yXHJcbnRpcENhbGN1bGF0b3IucmVzZXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PntcclxuICAgIHRpcENhbGN1bGF0b3IuZmllbGRzQ2xlYXJpbmcoKTtcclxufSlcclxuIl19